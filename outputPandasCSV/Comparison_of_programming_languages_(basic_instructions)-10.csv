,Unnamed: 0,throw,handler,assertion
0,Ada[1],raise exception_name «with string_expression»,beginstatementsexceptionwhen exception_list1 => statements;when exception_list2 => statements;...«when others => statements;»end[b],pragma Assert («Check =>» boolean_expression ««Message =>» string_expression»)[function | procedure | entry] withPre => boolean_expressionPost => boolean_expressionany_type with Type_Invariant => boolean_expression
1,APL,«string_expression» ⎕SIGNAL number_expression,:Trap number«s»_expressionstatements«:Case number«s»_expressionstatements»...«:Else number«s»_expressionstatements»:EndTrap,«string_expression» ⎕SIGNAL 98/⍨~condition
2,C (C99),"longjmp(state, exception);",switch (setjmp(state)) { case 0: instructions break; case exception: instructions ... },assert(condition);
3,C++,throw exception;,try { instructions } catch «(exception)» { instructions } ...,assert(condition);
4,C#,throw exception;,try { instructions } catch «(exception« name»)» { instructions } ... «finally { instructions }»,System.Diagnostics.Debug.Assert(condition);or System.Diagnostics.Trace.Assert(condition);
5,Java,throw exception;,try { instructions } catch (exception) { instructions } ... «finally { instructions }»,assert condition «: description»;
6,JavaScript,throw exception;,try { instructions } catch (exception) { instructions } «finally { instructions }»,?
7,D,throw exception;,try { instructions } catch (exception) { instructions } ... «finally { instructions }»,assert(condition);
8,PHP,throw exception;,try { instructions } catch (exception) { instructions } ... «finally { instructions }»,assert(condition);
9,S-Lang,throw exception;,try { instructions } catch «exception» { instructions } ... «finally { instructions }»,?
10,Windows PowerShell,throw exception;,trap «[exception]» { instructions } ... instructions or try { instructions } catch «[exception]» { instructions } ... «finally { instructions }»,[Debug]::Assert(condition)
11,Objective-C,@throw exception;,@try { instructions } @catch (exception) { instructions } ... «@finally { instructions }»,"NSAssert(condition, description);"
12,Swift,throw exception (2.x),do { try expression ... instructions } catch exception { instructions } ... (2.x),"assert(condition«, description»)"
13,Perl,die exception;,eval { instructions }; if ($@) { instructions },?
14,Raku,die exception;,try { instructions CATCH { when exception { instructions } ...}},?
15,Ruby,raise exception,begin instructions rescue exception instructions... «else instructions» «ensure instructions» end,
16,Smalltalk,exception raise,instructionBlock on: exception do: handlerBlock,assert: conditionBlock
17,Common Lisp,"(error ""exception"") or (error typearguments) or (error (make-conditiontypearguments))",(handler-case(progn instructions)(exception instructions)...) or (handler-bind(condition (lambdainstructions«invoke-restart restart args»))...)[a],(assert condition) or (assert condition«(place)«error»») or (check-type var type)
18,Scheme (R6RS),(raise exception),(guard (con (condition instructions) ...) instructions),?
19,ISLISP,"(error ""error-string"" objects) or (signal-condition condition continuable)",(with-handlerhandler form*),?
20,Pascal,raise Exception.Create(),try Except on E: exception do begin instructions end; end;,?
21,Visual Basic,Err.Raise ERRORNUMBER,With New Try: On Error Resume Next OneInstruction .Catch: On Error GoTo 0: Select Case .Number Case ERRORNUMBER instructions End Select: End With '*** Try class *** Private mstrDescription As String Private mlngNumber As Long Public Sub Catch() mstrDescription = Err.Description mlngNumber = Err.Number End Sub Public Property Get Number() As Long Number = mlngNumber End Property Public Property Get Description() As String Description = mstrDescription End Property [12],Debug.Assert condition
22,Visual Basic .NET,Throw exceptionor Error errorcode,Try instructions Catch« name As exception»« When condition» instructions ... «Finally instructions» End Try,System.Diagnostics.Debug.Assert(condition)or System.Diagnostics.Trace.Assert(condition)
23,Xojo,Raise exception,Try instructions Catch «exception»instructions ... «Finally instructions» End Try,
24,Python,raise exception,try: Tab ↹ instructions except «exception»: Tab ↹ instructions ... «else: Tab ↹ instructions» «finally: Tab ↹ instructions»,assert condition
25,Fortran,,,
26,Forth,code THROW,xt CATCH ( code or 0 ),
27,OCaml,raise exception,try expression with pattern -> expression ...,assert condition
28,F#,raise exception,try expression with pattern -> expression ... or try expression finally expression,assert condition
29,Standard ML,raise exception «arg»,expression handle pattern => expression ...,
30,Haskell (GHC),throw exception or throwError expression,catch tryExpression catchExpression or catchError tryExpression catchExpression,assert condition expression
31,COBOL,RAISE «EXCEPTION» exception,USE «AFTER» EXCEPTION OBJECT class-name. orUSE «AFTER» EO class-name. or USE «AFTER» EXCEPTION CONDITION exception-name «FILE file-name». orUSE «AFTER» EC exception-name «FILE file-name».,
